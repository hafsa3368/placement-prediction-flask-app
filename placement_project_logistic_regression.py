# -*- coding: utf-8 -*-
"""placement-project-logistic-regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19pcXi320yNgwMy_KSUsLKA-KUz-sH_4a
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split

import sklearn

print("numpy:", np.__version__)
print("pandas:", pd.__version__)
print("sklearn:", sklearn.__version__)

df=pd.read_csv("/content/placement.csv")

df.head()

"""# **Data Preprocessing**"""

df=df.iloc[:,1:]

df

df.info()

"""# EDA (Exploratory Data Analyst )"""

import matplotlib.pyplot as plt

plt.scatter(df['cgpa'],df['iq'],c=df['placement'])

"""As we can see ,our dataset can easily separate by lines and it is linean .So in this case logistic Regression model is best."""

X=df.iloc[:,0:2]
X

Y=df.iloc[:,-1]
Y

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1)

X_train

Y_train

X_test

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

from sklearn.linear_model import LogisticRegression
model=LogisticRegression()
#model training
model.fit(X_train,Y_train)

model_pre=model.predict(X_test)

Y_test

from sklearn.metrics import accuracy_score
accuracy_score(Y_test,model_pre)

"""***Decision boundrary***"""

from mlxtend.plotting import plot_decision_regions
plot_decision_regions(X_train,Y_train.values, clf=model, legend=2)

import pickle
pickle.dump(model,open('model.pkl','wb'))

